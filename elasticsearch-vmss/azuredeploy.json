{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "defaultValue": "es-azure",
            "metadata": {
                "description": "The name of the cluster."
            }
        },
        "vmssName": {
            "type": "string",
            "metadata": {
                "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
            },
            "maxLength": 61
        },
        "instanceCount": {
            "type": "int",
            "metadata": {
                "description": "Number of VM instances (200 or less)."
            },
            "defaultValue": 3,
            "maxValue": 200
        },
        "masterCount": {
            "type": "int",
            "metadata": {
                "description": "Number of master nodes"
            },
            "defaultValue": 3
        },
        "clientCount": {
            "type": "int",
            "metadata": {
                "description": "Number of client nodes"
            },
            "defaultValue": 2
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for all VMs."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Yifei891031/azure-quickstart-templates/master",
            "metadata": {
                "description": "Change this value to your repo name if deploying from a fork"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        },
        "storageAccountName":{
"type": "string",
"defaultValue":"o365ipdiesstorage"
        }
    },
    "variables": {
        "storageAccountType": "Standard_GRS",
        "storageAccountName": "[concat(parameters('storageAccountName'), 'sa')]",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "dataNodeNetworkInterfaceOffset":"[add(parameters('masterCount'), parameters('clientCount'))]",
        "namingInfix": "[toLower(parameters('vmssName'))]",
        "domainNameLabel": "[variables('namingInfix')]",
        "virtualNetworkName": "[concat(variables('namingInfix'), '-vnet')]",
        "publicIpAddressName": "[concat(variables('namingInfix'), '-pip')]",
        "publicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]",
        "loadBalancerName": "[concat(variables('namingInfix'), '-lb')]",
        "backendPoolName": "[concat(variables('namingInfix'), '-bepool')]",
        "nicName": "[concat(variables('namingInfix'), '-nic')]",
        "masterName": "[concat(variables('namingInfix'), '-master')]",
        "clientName": "[concat(variables('namingInfix'), '-client')]",
        "dataName": "[concat(variables('namingInfix'), '-data')]",
        "nsgName": "[concat(variables('namingInfix'), '-master-nsg')]",
        "ipConfigName": "[concat(variables('namingInfix'), '-ipconfig')]",
        "subnetName": "[concat(variables('namingInfix'), '-subnet')]",
        "vmStorageAccountContainerName": "vhds",
        "masterSize": "Standard_DS1_v2",
        "vmSku": "Standard_E4_v3",
        "clientSku": "Standard_DS3_v2",
        "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "16.04.201703280"
        },
        "elasticSetupScriptUrl": "[concat(parameters('_artifactsLocation'), '/elasticsearch-vmss/install-elasticsearch.sh', parameters('_artifactsLocationSasToken'))]",
        "diskSetupScriptUrl": "[concat(parameters('_artifactsLocation'), '/shared_scripts/ubuntu/vm-disk-utils-0.1.sh', parameters('_artifactsLocationSasToken'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
              "accountType": "[variables('storageAccountType')]"
            }
          },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allows inbound ssh traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "22",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Elasticsearch",
                        "properties": {
                            "description": "Allows inbound HTTP traffic from anyone",
                            "protocol": "Tcp",
                            "sourcePortRange": "5601",
                            "destinationPortRange": "5601",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-03-30",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIpAddressName'), '-', copyIndex())]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-03-30",
            "copy": {
                "name": "clientPipLoop",
                "count": "[parameters('clientCount')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('domainNameLabel'), '-', copyIndex())]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[concat(variables('loadBalancerName'), '-', copyIndex())]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-03-30",
            "copy": {
                "name": "clientLBLoop",
                "count": "[parameters('clientCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('publicIpAddressName'), '-', copyIndex()))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpAddressName'), '-', copyIndex()))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('backendPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())),'/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())),'/backendAddressPools/', variables('backendPoolName'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 5601,
                            "backendPort": 5601,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())),'/probes/tcpProbe')]"
                            }
                        }
                    },
                    {
                        "name": "ssh",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())),'/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())),'/backendAddressPools/', variables('backendPoolName'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())),'/probes/sshProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 9200,
                            "intervalInSeconds": 30,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "sshProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 30,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-master-', copyindex())]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "copy": {
                "name": "masterNodesNicLoop",
                "count": "[parameters('masterCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigmaster",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.0.1', copyindex())]",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-client-', copyindex())]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpAddressName'), '-', copyIndex()))]",
                "[resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex()))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "copy": {
                "name": "clientNodesNicLoop",
                "count": "[parameters('clientCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigmaster",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.0.1', add(copyindex(), parameters('masterCount')))]",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '-', copyIndex())), '/backendAddressPools/', variables('backendPoolName'))]"
                                }
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-data-', copyindex())]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "copy": {
                "name": "dataNodesNicLoop",
                "count": 30
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigmaster",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.0.1', add(copyindex(), int(variables('dataNodeNetworkInterfaceOffset'))))]",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('masterName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "masterVmLoop",
                "count": 3
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),'-master-', copyindex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('masterSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('master-vm', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "osdisk",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',concat(variables('masterName'), copyindex(), 'os'),'.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'-master-', copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('masterName'), copyindex(), '/installelasticsearch')]",
                    "apiVersion": "2016-04-30-preview",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('masterName'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[variables('elasticSetupScriptUrl')]",
                                "[variables('diskSetupScriptUrl')]"
                            ],
                            "commandToExecute": "[concat('bash install-elasticsearch.sh -m -n ', parameters('clusterName'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('clientName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "clientVmLoop",
                "count": 2
            },
            "dependsOn": [
                "masterVmLoop",
                "[concat(variables('dataName'), copyindex())]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),'-client-', copyindex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('clientSku')]"
                },
                "osProfile": {
                    "computerName": "[concat('client-vm', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "osdisk",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',concat(variables('clientName'), copyindex(), 'os'),'.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'-client-', copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('clientName'), copyindex(), '/installelasticsearch')]",
                    "apiVersion": "2016-04-30-preview",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('clientName'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[variables('elasticSetupScriptUrl')]",
                                "[variables('diskSetupScriptUrl')]"
                            ],
                            "commandToExecute": "[concat('bash install-elasticsearch.sh -c -n ', parameters('clusterName'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('dataName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "dataVmLoop",
                "count": "[parameters('instanceCount')]"
            },
            "dependsOn": [
                "masterVmLoop",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),'-data-', copyindex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat('data-vm', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name":"osdisk",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',concat(variables('dataName'), copyindex(), 'os'),'.vhd')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "name":"datadisk0",
                            "lun": "0",
                            "createOption": "Empty",
                            "diskSizeGB": "1024",
                            "caching": "ReadWrite",
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',concat(variables('dataName'), copyindex(), 0),'.vhd')]"
                            }
                        },
                        {
                            "name":"datadisk1",
                            "lun": "1",
                            "createOption": "Empty",
                            "diskSizeGB": "1024",
                            "caching": "ReadWrite",
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',concat(variables('dataName'), copyindex(), 1),'.vhd')]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'-data-', copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('dataName'), copyindex(), '/installelasticsearch')]",
                    "apiVersion": "2016-04-30-preview",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('dataName'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[variables('elasticSetupScriptUrl')]",
                                "[variables('diskSetupScriptUrl')]"
                            ],
                            "commandToExecute": "[concat('bash install-elasticsearch.sh -d -n ', parameters('clusterName'))]"
                        }
                    }
                }
            ]
        }
    ]
}
